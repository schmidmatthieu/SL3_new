version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    image: ${DOCKER_REGISTRY}/sl3-frontend:${TAG:-latest}
    restart: always
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    image: ${DOCKER_REGISTRY}/sl3-backend:${TAG:-latest}
    restart: always
    environment:
      - NODE_ENV=production
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
      - redis

  mongodb:
    image: mongo:latest
    restart: always
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:latest
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    ports:
      - "3001:3000"
    depends_on:
      - prometheus

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:
